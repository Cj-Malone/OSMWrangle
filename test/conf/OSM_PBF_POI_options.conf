##############################
## Configuration for OSMWrangle ver.2.0 in order to extract data regarding Points of Interest (POIs) from OpenStreetMap PBF files into CSV tuples / RDF triples.
## To execute, depending on the dataset size, you should allocate enough memory to JVM in order to boost performance; otherwise, OSMWrangle would rely on disk-based indexing and may run less efficiently.
## EXAMPLE COMMAND: java -Xmx2g -cp target/osmwrangle-2.0-SNAPSHOT.jar eu.smartdatalake.athenarc.osmwrangle.Extractor ./test/conf/OSM_PBF_POI_options.conf
##############################


##############################
# Input and output parameters (paths are RELATIVE to executable)
##############################

## Possible input formats: OSM_XML, OSM_PBF
inputFormat = OSM_PBF

## Conversion mode: specify 'STREAM' (in-memory)
mode = STREAM

## Paths to directories and files used by the application
tmpDir = ./test/tmp
inputFiles = ./test/data/latest.osm.pbf
outputDir = ./test/output

## Possible RDF export formats: N-TRIPLES
## Comment out the next line (#) in case you do NOT wish to export data in RDF
serialization = N-TRIPLES

## Specify the spatial ontology for geometries in the exported data. 
## Possible values: GeoSPARQL
targetGeoOntology = GeoSPARQL


##############################
## Mapping specifications 
##############################

## [RDF only] If this YML mapping file is not specified for OSM XML/PBF files or it contains only the URI definition pattern, 
## then an RDF property will be created for each thematic attribute (tag) in the original schema, by borrowing the tag key as its name. 
## Based on OSM tags detected for each transformed entity, a "category" property will be created and added to the result.
mappingSpec = ./test/conf/OSM_ID_RDF_mapping.yml

## [RDF only] Alternatively, this YML contains RDF mappings for several attributes:
#mappingSpec = ./test/conf/OSM_attributes_RDF_mappings.yml

# [CSV only] Path to attribute mappings from OSM tags to CSV columns
mapping_file = ./test/conf/POI_attribute_mapping.conf


##############################
## Classification scheme 
##############################

## File (in YML format) containing classification hierarchy of categories.
## In case of converting OSM data, this YML file can specify classification of features into categories according to their respective OSM tags; essentially discarding (i.e., filtering out) all other entities.

#Assign POI categories / subcategories based on OSM tags
## If this YML file is missing or the next line is commented out (#), no filtering will be applied and all parsable OSM entities will be extracted.
classificationSpec = ./test/conf/OSM_tags_POI_classification.yml


##############################
# Spatial / thematic filters
# Change filter conditions to reflect the contents that will be extracted from the input file.
##############################

## OPTIONAL: Spatial filter to only extract input geometries contained within the polygon specified in this WKT
#spatialExtent=POLYGON((32.88 34.59, 33.2 34.59, 33.2 34.78, 32.88 34.78, 32.88 34.59))

## OPTIONAL: Thematic filter specified in SQL logical conditions(s)
#filterSQLCondition = name LIKE '%Limassol%'

## Determine whether to extract OSM entities without a name
keepUnnamedEntities = false


###################################
# Namespaces parameters (RDF only)
###################################

## MANDATORY parameter that specifies the data source provider of the input features
featureSource=OpenStreetMap

##OPTIONAL parameters regarding namespaces of generated URIs:
nsOntology = http://slipo.eu/def#
nsGeometry = http://www.opengis.net/ont/geosparql#
nsFeatureURI = http://openstreetmap.org/
nsClassURI = http://slipo.eu/id/term/
nsClassificationURI = http://slipo.eu/id/classification/
nsDataSourceURI = http://slipo.eu/id/poisource/

## Specify two lists (of comma separated values) with the correspondence between a prefix and its respective namespace (mainly used in attribute mappings)
prefixes = slipo, geo, xsd, rdfs, wgs84_pos
namespaces = http://slipo.eu/def#, http://www.opengis.net/ont/geosparql#, http://www.w3.org/2001/XMLSchema#, http://www.w3.org/1999/02/22-rdf-syntax-ns#, http://www.w3.org/2003/01/geo/wgs84_pos#


##############################
# Spatial Reference parameters
##############################
# Optional parameters. These fields should be filled in if a transformation between EPSG reference systems is needed.
# If not specified, geometries are assumed in WGS84 reference system (EPSG:4326). Typically, no transformation is needed for OSM data, because all input geometries must be in WGS84 reference system (EPSG:4326).
#sourceCRS = EPSG:4326
#targetCRS = EPSG:2100


########################################
# Other parameters (optional; RDF only)
########################################
# OPTIONAL parameter. Default language tag for string literals created in the output RDF. By default, the value will be English-en.
defaultLang = en
